=== properties ===

TODO:

* be able to declare a property to be modified
  + propertyManager.declare(id, type, property) 
  
* how to handle from outside the case when a property was removed/unregistered
  + check contains each time
 
* list available properties to be modified at runtime

* properties of real values could have several restrictions like minimum and maximum values, step, etc, for example: 
  + speed (min:5.0, max:15.0, step:0.5)
  + editor should be able to use these values
  + restriction("character.name", possibleValues("ben", "tommy", "manson"));
  + restrictions/constraints could be used for custom editor components in the way they want

* export properties modification (first version: print them in the terminal)

* modified property values are stored in an edition session, so you could maintain the modified value between multiple game plays for example (while the game is running)

* all exposed properties could be modified but maybe in some places of the app you need to mark them as readonly

* properties can change type if a new one is registered with the specified id

* possible values to edit in real time: Float, Integer, Color, Vector2?, 

DONE:

=== real time editor ===

TODO:

* monitor properties changes to update the GUI in some way

*
 
* jsliders should have original/default value of the property labeled

* to have default editor components for common values like float, integer, string, etc

* register editors components like plugins, for example, a Component to handle the LibGDX Color and a different Component to handle kalle_h Light.

DONE:


